{"ast":null,"code":"var _jsxFileName = \"/home/amirhossein/AMHF/blockchain/blockchain98/app/src/components/Admin/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport 'react-table/react-table.css';\nimport userRegisterBlockchain from '../../actions/userRegisterBlockchain';\n\nconst secp256k1 = require('sawtooth-sdk/signing/secp256k1');\n\nconst {\n  createAccount,\n  submit\n} = require(\"../transactions/transactions\");\n\nconst User = props => {\n  const [userInfo, setUserInfo] = useState({});\n  const [userLoading, setUserLoading] = useState(false);\n\n  const getKeyPair = () => {\n    const context = new secp256k1.Secp256k1Context();\n    const privateKey = context.newRandomPrivateKey();\n    const privateKeyHex = privateKey.asHex();\n    const publicKey = context.getPublicKey(privateKey).asHex();\n    return [publicKey, privateKeyHex];\n  };\n\n  const createKeys = () => {\n    const keys = getKeyPair();\n    let transaction = createAccount(keys[1]);\n    transaction = Buffer.from(transaction).toString(\"base64\");\n    submit({\n      txn: transaction\n    }, true).then(res => {\n      if (res.data.success === true) {\n        props.dispatch(userRegisterBlockchain({\n          publicKey: keys[0]\n        }));\n        alert(\" کلید خصوصی شما: \" + keys[1]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!!props.user.login.pubKey) {\n      setUserLoading(true);\n      axios.get(`/user/getUserInfo`).then(response => {\n        console.log(response.data.data);\n        setUserInfo(response.data.data);\n        setUserLoading(false);\n      });\n    }\n  }, [props.user.login.pubKey]);\n  return React.createElement(\"div\", {\n    className: \"user_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\u0627\\u06CC\\u0645\\u06CC\\u0644: \"), props.user.login.email), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\u06A9\\u0644\\u06CC\\u062F \\u0639\\u0645\\u0648\\u0645\\u06CC: \"), props.user.login.pubKey), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u0645\\u0648\\u062C\\u0648\\u062F\\u06CC : \"), userLoading ? \"loading...\" : userInfo.balance)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => createKeys(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u062A\\u0648\\u0644\\u06CC\\u062F \\u06A9\\u0644\\u06CC\\u062F\")));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(User);","map":{"version":3,"sources":["/home/amirhossein/AMHF/blockchain/blockchain98/app/src/components/Admin/index.js"],"names":["React","useEffect","useState","axios","connect","userRegisterBlockchain","secp256k1","require","createAccount","submit","User","props","userInfo","setUserInfo","userLoading","setUserLoading","getKeyPair","context","Secp256k1Context","privateKey","newRandomPrivateKey","privateKeyHex","asHex","publicKey","getPublicKey","createKeys","keys","transaction","Buffer","from","toString","txn","then","res","data","success","dispatch","alert","user","login","pubKey","get","response","console","log","email","balance","mapStateToProps","state","users"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,6BAAP;AACA,OAAQC,sBAAR,MAAqC,sCAArC;;AAEA,MAAOC,SAAS,GAAGC,OAAO,CAAC,gCAAD,CAA1B;;AACA,MAAM;AACFC,EAAAA,aADE;AAEFC,EAAAA;AAFE,IAGAF,OAAO,CAAC,8BAAD,CAHb;;AAQA,MAAMG,IAAI,GAAGC,KAAK,IAAI;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;;AAGA,QAAMc,UAAU,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAG,IAAIX,SAAS,CAACY,gBAAd,EAAhB;AACA,UAAMC,UAAU,GAAGF,OAAO,CAACG,mBAAR,EAAnB;AACA,UAAMC,aAAa,GAAGF,UAAU,CAACG,KAAX,EAAtB;AACA,UAAMC,SAAS,GAAGN,OAAO,CAACO,YAAR,CAAqBL,UAArB,EAAiCG,KAAjC,EAAlB;AACA,WAAO,CAACC,SAAD,EAAYF,aAAZ,CAAP;AACH,GAND;;AAOA,QAAMI,UAAU,GAAE,MAAM;AACpB,UAAMC,IAAI,GAAGV,UAAU,EAAvB;AACA,QAAIW,WAAW,GAAGnB,aAAa,CAACkB,IAAI,CAAC,CAAD,CAAL,CAA/B;AACAC,IAAAA,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,QAAzB,CAAkC,QAAlC,CAAd;AACArB,IAAAA,MAAM,CAAC;AAAEsB,MAAAA,GAAG,EAAEJ;AAAP,KAAD,EAAuB,IAAvB,CAAN,CAAmCK,IAAnC,CAAyCC,GAAD,IAAS;AAC7C,UAAGA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,IAAxB,EAA6B;AACzBxB,QAAAA,KAAK,CAACyB,QAAN,CAAe/B,sBAAsB,CAAC;AAACkB,UAAAA,SAAS,EAAEG,IAAI,CAAC,CAAD;AAAhB,SAAD,CAArC;AACAW,QAAAA,KAAK,CAAC,sBAAqBX,IAAI,CAAC,CAAD,CAA1B,CAAL;AACH;AACJ,KALD;AAOH,GAXD;;AAcAzB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAAC,CAACU,KAAK,CAAC2B,IAAN,CAAWC,KAAX,CAAiBC,MAAtB,EAA6B;AACzBzB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAZ,MAAAA,KAAK,CAACsC,GAAN,CAAW,mBAAX,EAA+BT,IAA/B,CAAoCU,QAAQ,IAAI;AAC5CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACR,IAAT,CAAcA,IAA1B;AACArB,QAAAA,WAAW,CAAC6B,QAAQ,CAACR,IAAT,CAAcA,IAAf,CAAX;AACAnB,QAAAA,cAAc,CAAC,KAAD,CAAd;AAGH,OAND;AAOH;AAEJ,GAZQ,EAYP,CAACJ,KAAK,CAAC2B,IAAN,CAAWC,KAAX,CAAiBC,MAAlB,CAZO,CAAT;AAaA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAL,EAA0B7B,KAAK,CAAC2B,IAAN,CAAWC,KAAX,CAAiBM,KAA3C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAAL,EAA+BlC,KAAK,CAAC2B,IAAN,CAAWC,KAAX,CAAiBC,MAAhD,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAL,EAA4B1B,WAAW,GAAG,YAAH,GAAkBF,QAAQ,CAACkC,OAAlE,CAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMrB,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADJ,CANJ,CADJ;AAYH,CAnDD;;AAsDA,SAAUsB,eAAV,CAA2BC,KAA3B,EAAmC;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAACD,KAAK,CAACV;AADT,GAAP;AAGH;;AAED,eAAelC,OAAO,CAAC2C,eAAD,CAAP,CAAyBrC,IAAzB,CAAf","sourcesContent":["import React,{ useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux'\nimport 'react-table/react-table.css';\nimport  userRegisterBlockchain  from '../../actions/userRegisterBlockchain'\n\nconst  secp256k1 = require('sawtooth-sdk/signing/secp256k1')\nconst {\n    createAccount,\n    submit\n  } = require(\"../transactions/transactions\");\n  \n\n\n\nconst User = props => {\n    const [userInfo, setUserInfo] = useState({});\n    const [userLoading, setUserLoading] = useState(false);\n\n    \n    const getKeyPair = () => {\n        const context = new secp256k1.Secp256k1Context()\n        const privateKey = context.newRandomPrivateKey()\n        const privateKeyHex = privateKey.asHex()\n        const publicKey = context.getPublicKey(privateKey).asHex()\n        return [publicKey, privateKeyHex]\n    }\n    const createKeys= () => {\n        const keys = getKeyPair();\n        let transaction = createAccount(keys[1])\n        transaction = Buffer.from(transaction).toString(\"base64\");\n        submit({ txn: transaction }, true).then((res) => {\n            if(res.data.success === true){\n                props.dispatch(userRegisterBlockchain({publicKey: keys[0]}))\n                alert(\" کلید خصوصی شما: \"+ keys[1])\n            }\n        });\n\n    }\n\n\n    useEffect(()=>{\n        if(!!props.user.login.pubKey){\n            setUserLoading(true)\n            axios.get(`/user/getUserInfo`).then(response => {\n                console.log(response.data.data)\n                setUserInfo(response.data.data)\n                setUserLoading(false)\n                \n    \n            })\n        }\n        \n    },[props.user.login.pubKey])\n    return (\n        <div className=\"user_container\" >\n            <div className=\"nfo\">\n                <div><span>ایمیل: </span>{props.user.login.email}</div>\n                <div><span>کلید عمومی: </span>{props.user.login.pubKey}</div>\n                <div><span>موجودی : </span>{userLoading ? \"loading...\" : userInfo.balance}</div>\n            </div>\n            <div>\n                <button onClick={() => createKeys()}>تولید کلید</button>\n            </div>\n        </div>\n    )\n}\n\n\nfunction  mapStateToProps (state)  {\n    return {\n        users:state.user\n    }\n}\n\nexport default connect(mapStateToProps)(User)"]},"metadata":{},"sourceType":"module"}